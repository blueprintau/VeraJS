name: Create Release

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'package.json'
  workflow_dispatch:
    inputs:
      deploy_coverage:
        description: 'Deploy coverage to GitHub Pages'
        required: false
        type: boolean
        default: true

permissions:
  contents: write
  actions: read

jobs:
  test:
    uses: ./.github/workflows/test.yaml
    with:
      coverage: true

  release:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get all history for changelog

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: coverage/

      - name: Deploy coverage to GitHub Pages
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.deploy_coverage || github.event_name == 'push' }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./coverage
          destination_dir: coverage

      - name: Get version from package.json
        id: package_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Generate build version
        id: build_version
        run: |
          BASE_VERSION="${{ steps.package_version.outputs.version }}"
          BUILD_NUMBER="${GITHUB_RUN_NUMBER}"
          FULL_VERSION="${BASE_VERSION}-build.${BUILD_NUMBER}"
          echo "Generated version: ${FULL_VERSION}"
          echo "full_version=${FULL_VERSION}" >> $GITHUB_OUTPUT
          echo "tag=v${BASE_VERSION}" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        id: check_tag
        run: |
          if git rev-parse "${{ steps.build_version.outputs.tag }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        if: steps.check_tag.outputs.exists == 'false'
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          tag_name: ${{ steps.build_version.outputs.tag }}
          name: Release ${{ steps.build_version.outputs.tag }}
          body: |
            ## VeraJS ${{ steps.build_version.outputs.tag }}
            
            Build: ${{ steps.build_version.outputs.full_version }}
            
            ### Changes
            See the [commit history](https://github.com/${{ github.repository }}/commits/${{ steps.build_version.outputs.tag }}) for details.
            
            ### ðŸ“Š Coverage Report
            [View Coverage Report](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/coverage/)
            
            ### ðŸ’¿ Installation
            **Via CDN:**
            ```html
            <script src="https://github.com/${{ github.repository }}/releases/download/${{ steps.build_version.outputs.tag }}/vera.min.js"></script>
            ```
          draft: false
          prerelease: false

      - name: Skip Release (already exists)
        if: steps.check_tag.outputs.exists == 'true'
        run: echo "Release v${{ steps.package_version.outputs.version }} already exists. Skipping release creation."