name: Run Vitest Tests

on:
  workflow_dispatch:
    branches:
      - main
      - development
    inputs:
      test_path:
        description: 'Specific test path (optional, leave empty to run all tests)'
        required: false
        type: string
      coverage:
        description: 'Generate coverage report'
        required: false
        type: boolean
        default: false

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run all tests
        if: ${{ !inputs.test_path && !inputs.coverage }}
        run: npm test

      - name: Run specific tests
        if: ${{ inputs.test_path && !inputs.coverage }}
        run: npm test -- ${{ inputs.test_path }}

      - name: Run tests with coverage
        if: ${{ inputs.coverage && !inputs.test_path }}
        run: npm test -- --coverage

      - name: Run specific tests with coverage
        if: ${{ inputs.coverage && inputs.test_path }}
        run: npm test -- ${{ inputs.test_path }} --coverage

      - name: Upload coverage reports as artifact
        if: ${{ inputs.coverage }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-node-${{ matrix.node-version }}
          path: coverage/
          retention-days: 7

      - name: Deploy coverage to GitHub Pages
        if: ${{ inputs.coverage && matrix.node-version == '20.x' && github.ref == 'refs/heads/main' }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./coverage
          destination_dir: coverage

      - name: Comment coverage URL on workflow
        if: ${{ inputs.coverage && matrix.node-version == '20.x' }}
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)
          echo "::notice::Coverage report will be available at: https://${{ github.repository_owner }}.github.io/${REPO_NAME}/coverage/"

      - name: Display test results
        if: always()
        run: echo "Tests completed for Node.js ${{ matrix.node-version }}"